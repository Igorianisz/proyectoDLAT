paths:
    /auth/login:
        post:
            tags:
                - auth
            summary: Login
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    format: email
                                password:
                                    type: string
                                    format: password
            responses:
                200:
                    description: OK
                400:
                    description: Bad Request
                500:
                    description: Internal Server Error
    /auth/register:
        post:
            tags:
                - auth
            summary: Register
            security:
                - bearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                last_name:
                                    type: string
                                email:
                                    type: string
                                    format: email
                                password:
                                    type: string
                                    format: password
                                role:
                                    type: string
                                    enum:
                                        - Admin
                                        - Dev
                                    default: Admin
            responses:
                201:
                    description: Created
                400:
                    description: Bad Request
                500:
                    description: Internal Server Error
    /user:
        get:
            tags:
                - user
            summary: Get all users
            security:
                - bearerAuth: []
            responses:
                200:
                    description: OK
                403:
                    description: Forbidden
        post:
            tags:
                - user
            summary: Create a new user
            security:
                - bearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                last_name:
                                    type: string
                                email:
                                    type: string
                                    format: email
                                password:
                                    type: string
                                    format: password
            responses:
                201:
                    description: Created
                403:
                    description: Forbidden

    /user/{id}:
        get:
            tags:
                - user
            summary: Get user by ID
            security:
                - bearerAuth: []
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    description: OK
                403:
                    description: Forbidden
        put:
            tags:
                - user
            summary: Update user by ID
            security:
                - bearerAuth: []
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                last_name:
                                    type: string
                                email:
                                    type: string
                                    format: email
                                password:
                                    type: string
                                    format: password
            responses:
                200:
                    description: OK
                403:
                    description: Forbidden
        # # post:
        # #     tags:
        # #         - user
        # #     summary: Activate or Deactivate user by ID
        # #     security:
        # #         - bearerAuth: []
        # #     parameters:
        # #         - name: id
        # #           in: path
        # #           required: true
        # #           schema:
        # #               type: string
        # #     requestBody:
        # #         required: true
        # #         content:
        # #             application/json:
        # #                 schema:
        # #                     type: object
        # #                     properties:
        # #                         is_active:
        # #                             type: boolean
        #     responses:
        #         200:
        #             description: OK
        #         403:
        #             description: Forbidden
        delete:
            tags:
                - user
            summary: Delete user by ID
            security:
                - bearerAuth: []
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: string
                      format: uuid
                      example: '9184960d-fe58-49c5-a714-6edb32672d14'
            responses:
                204:
                    description: No Content
                403:
                    description: Forbidden
                404:
                    description: Not Found
    /project:
        get:
            tags:
                - projects
            summary: Get all projects
            security:
                - bearerAuth: []
            responses:
                200:
                    description: OK
                403:
                    description: Forbidden
        post:
            tags:
                - projects
            summary: Create a new project
            security:
                - bearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                description:
                                    type: string
            responses:
                201:
                    description: Created
                403:
                    description: Forbidden
    /project/{projectId}:
        get:
            tags:
                - projects
            summary: Get projects by projectId
            security:
                - bearerAuth: []
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    description: OK
                403:
                    description: Forbidden
        delete:
            tags:
                - projects
            summary: Delete projects by projectId
            security:
                - bearerAuth: []
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                      type: string
                      format: uuid
                      example: 'e748fdbf-44b5-4711-b7b9-ef04594b5298'
            responses:
                204:
                    description: No Content
                403:
                    description: Forbidden
                404:
                    description: Not Found
    /project/update/{projectId}:
        post:
            tags:
                - projects
            summary: Update project by projectId
            security:
                - bearerAuth: []
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                      type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                description:
                                    type: string
                                start_date:
                                    type: string
                                    format: date-time
                                end_date:
                                    type: string
                                    format: date-time
                                status:
                                    type: string
                                    enum:
                                        - done
                                        - inProgress
                                        - delayed
                                        - notStarted
                                        - cancelled
            responses:
                200:
                    description: OK
                403:
                    description: Forbidden
    /project/assign/{projectId}:
        post:
            tags:
                - projects
            summary: Assign user by userId to project by projectId
            security:
                - bearerAuth: []
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                      type: string
                      format: uuid
                      example: 'e748fdbf-44b5-4711-b7b9-ef04594b5298'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                userId:
                                    type: string
                                    format: uuid
                                    example: 'e748fdbf-44b5-4711-b7b9-ef04594b5298'
            responses:
                200:
                    description: OK
                403:
                    description: Forbidden
    /project/remove/{projectId}:
        delete:
            tags:
                - projects
            summary: Remove user by userId from project by projectId
            security:
                - bearerAuth: []
            parameters:
                - name: projectId
                  in: path
                  required: true
                  schema:
                      type: string
                      format: uuid
                      example: 'e748fdbf-44b5-4711-b7b9-ef04594b5298'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                userId:
                                    type: string
                                    format: uuid
                                    example: 'e748fdbf-44b5-4711-b7b9-ef04594b5298'
            responses:
                200:
                    description: OK
                403:
                    description: Forbidden
components:
    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT
